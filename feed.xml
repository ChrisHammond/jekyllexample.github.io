<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JekyllExample.com - A sample Jekyll Example website! </title>
    <description>A sample website built on the Jekyll platform designed to make it easy for you to get a website of your own up and running.</description>
    <link>https://www.jekyllexample.com/</link>
    <atom:link href="https://www.jekyllexample.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 17 May 2024 13:56:36 +0000</pubDate>
    <lastBuildDate>Fri, 17 May 2024 13:56:36 +0000</lastBuildDate>
    <generator>Jekyll v4.3.3</generator>
    
      <item>
        <title>Installing Jekyll locally on Ubuntu and getting it running using Windows Hyper-V</title>
        <description>&lt;h1 id=&quot;this-post-is-still-a-work-in-progress-as-of-04182024&quot;&gt;&lt;em&gt;This post is still a work in progress as of 04/18/2024&lt;/em&gt;&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;Create a new Hyper-V VM installing Ubuntu 22.04&lt;/li&gt;
  &lt;li&gt;Run updates for Ubuntu (reboot if necessary)&lt;/li&gt;
  &lt;li&gt;Install GIT
    &lt;blockquote&gt;
      &lt;p&gt;sudo apt install git&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Install Bundler
    &lt;blockquote&gt;
      &lt;p&gt;sudo apt install bundler&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.chrishammond.com/blog/itemid/3178/how-to-upgrade-ruby-on-ubuntu-2204-using-rbenv&quot;&gt;Install RBEnv to allow for multiple versions of Ruby&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Install Jekyll GEM&lt;/li&gt;
  &lt;li&gt;Install other required libraries
    &lt;blockquote&gt;
      &lt;p&gt;sudo apt install libvips-tools&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Create a projects directory via a terminal:
    &lt;blockquote&gt;
      &lt;p&gt;mkdir projects&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Navigate into the project directory:
    &lt;blockquote&gt;
      &lt;p&gt;cd projects&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Clone the JekyllExample repository, from a Terminal in Ubunty type
    &lt;blockquote&gt;
      &lt;p&gt;git clone https://github.com/ChrisHammond/jekyllexample.github.io.git&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Navigate into the new directory
    &lt;blockquote&gt;
      &lt;p&gt;cd jekyllexample.github.io&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Run the following terminal command to get everything installed properly
    &lt;blockquote&gt;
      &lt;p&gt;bundle install&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Run Jekyll to start a local webserver
    &lt;blockquote&gt;
      &lt;p&gt;bundle exec jekyll serve&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Browse to http://127.0.0.1:4000 in your web browser&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;next-steps&quot;&gt;Next steps:&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;If you have a large repository, or a large number of repositories, you might run out of disk space on your Hyper-V VM, if that’s the case &lt;a href=&quot;https://www.chrishammond.com/blog/itemid/3179/expanding-your-ubuntu-disk-running-in-a-virtual-ma&quot;&gt;check out this tutorial for how to expand your Ubuntu disk&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Install Homebrew and Git Credential Manager
    &lt;blockquote&gt;
      &lt;p&gt;/bin/bash -c “$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)”&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;brew tap microsoft/git
brew install –cask git-credential-manager-core&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Thu, 18 Apr 2024 10:00:15 +0000</pubDate>
        <link>https://www.jekyllexample.com/jekyll-on-ubuntu</link>
        <guid isPermaLink="true">https://www.jekyllexample.com/jekyll-on-ubuntu</guid>
        
        
        <category>Jekyll</category>
        
        <category>Tutorial</category>
        
      </item>
    
      <item>
        <title>Example Jekyll Sites based on this Repository</title>
        <description>&lt;p&gt;This blog post will be an ongoing list with some examples of websites that have been built based on this template/sample/repository!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.autocrossblog.com&quot;&gt;AutocrossBlog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.projectvw.com&quot;&gt;ProjectVW&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 01 Feb 2023 10:00:15 +0000</pubDate>
        <link>https://www.jekyllexample.com/sample-jekyll-sites</link>
        <guid isPermaLink="true">https://www.jekyllexample.com/sample-jekyll-sites</guid>
        
        
        <category>Jekyll</category>
        
        <category>Sample</category>
        
        <category>Example</category>
        
      </item>
    
      <item>
        <title>Easy instructions for installing Jekyll</title>
        <description>&lt;h1 id=&quot;this-post-is-still-a-work-in-progress-as-of-11302023&quot;&gt;&lt;em&gt;This post is still a work in progress as of 11/30/2023&lt;/em&gt;&lt;/h1&gt;

&lt;p&gt;The goal for this blog post is to provide easy instructions for installing Jekyll.&lt;/p&gt;

&lt;p&gt;If you follow these steps, you should be able to create a new Jekyll web site utilizing GitHub and GitHub Pages to host your repository and web site.&lt;/p&gt;

&lt;p&gt;We will walk you through the process of cloning the repository, making some changes to the site to configure it to be your own, and then ultimately getting your website published using your own custom domain name.&lt;/p&gt;

&lt;p&gt;A couple of assumptions to start:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/signup&quot;&gt;You have a GitHub account created&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;You have already purchased a custom domain name to use (you can bypass this and create a site using SITENAME.github.io)&lt;/li&gt;
  &lt;li&gt;You have Git tools installed (if you’re using Windows, use Git For Windows)&lt;/li&gt;
  &lt;li&gt;You have &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; installed, or some other text editor that you’re comfortable with.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;precursor&quot;&gt;Precursor&lt;/h2&gt;
&lt;p&gt;This page is a work in progress, if you find something missing or wrong, let me know! &lt;a href=&quot;https://github.com/ChrisHammond/jekyllexample.github.io/issues&quot;&gt;You can create an issue on the GitHub repo!&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;instructions&quot;&gt;Instructions&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Create a new Organization on GitHub
    &lt;ul&gt;
      &lt;li&gt;A free organization account will be sufficient. For our example organization, we will used JekyllExampleWeb (JekyllExample was already taken).&lt;/li&gt;
      &lt;li&gt;Creating a new organization for each custom domain name you are going to use makes it easier to setup and manage multiple sites. You theoretically could get by with &lt;a href=&quot;https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#types-of-github-pages-sites&quot;&gt;one Organization or just multiple projects under your user account&lt;/a&gt;, but I find it easier to manage multiple sites this way.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ChrisHammond/jekyllexample.github.io/generate&quot;&gt;Create a new repository based off the JekyllExample repository&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;While logged into GitHub, you should see a button that says “Use this template” next to the Code button in the JekyllExample repo, creating on the Use this template button will allow you to create a fork that is disconnected from the original repo and doesn’t bring over all the change history.&lt;/li&gt;
      &lt;li&gt;Be sure to check the “Include all branches” option when doing this, otherwise MAIN won’t come over and the workflow won’t work.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Rename the repository to match the domain name that you want to use for GitHub Pages
    &lt;ul&gt;
      &lt;li&gt;As soon as you fork the repository, you can rename it. You will want to rename it to match the domain name that you want to use for GitHub Pages, for example we use jekyllexample.com, so the repository is jekyllexample.github.io.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Clone the repository to your local machine for editing
    &lt;ul&gt;
      &lt;li&gt;You can clone the repository to your local machine using the following command, (assuming you have Git installed, start up Git Bash and then navigate to the folder where you want to clone the repository to)
        &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt; git clone https://github.com/ORGANIZATION/SITENAME.github.io.git
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;Where SITENAME is the name of your repository that you modified in Step 3.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Open the repository in Visual Studio Code
    &lt;ul&gt;
      &lt;li&gt;You can open the repository in Visual Studio Code using the following command:
        &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt; code SITENAME.github.io
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;Where SITENAME is the name of your repository that you modified in Step 3.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Navigate to the Repository Settings in GitHub
    &lt;ul&gt;
      &lt;li&gt;Navigate to the Actions/General Settings
        &lt;ul&gt;
          &lt;li&gt;Under Workflow Permissions be sure to choose “Read and write permissions” for the Actions workflow to be able to push changes to the repository. (&lt;em&gt;If you are unable to set this, try changing it at the Organization level first, then this individual repo&lt;/em&gt;)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Change the _config.yml file
    &lt;ul&gt;
      &lt;li&gt;This file has a number of variables for options for your site, such as Title, Description, Author, etc. You will want to customize these to start to brand and name your site.&lt;/li&gt;
      &lt;li&gt;If you’re using Google Analytics you can configure the MEASUREMENT ID here as well.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Edit the CNAME file in the root of the repository to match your custom domain name
    &lt;ul&gt;
      &lt;li&gt;If you’re not using a custom domain name, you can delete this file.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Commit your changes to the GitHub repository and push them.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt; git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
 git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Some updated comment about the commit here&quot;&lt;/span&gt;
 git push
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;ul&gt;
      &lt;li&gt;You may be prompted to configure your GitHub credentials at this point, &lt;a href=&quot;https://stackoverflow.com/questions/46878457/adding-git-credentials-on-windows&quot;&gt;here’s an approach on how to do that&lt;/a&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Configure the repository settings for GitHub Pages and Workflow to allow for deployment
    &lt;ul&gt;
      &lt;li&gt;In the GitHub Repository Settings, you will want to configure the following:
        &lt;ul&gt;
          &lt;li&gt;Under the GitHub Settings find the GitHub Pages section&lt;/li&gt;
          &lt;li&gt;Under Source choose “Deploy from a branch”&lt;/li&gt;
          &lt;li&gt;Under Branch choose “main” and “/(root)”&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Configure your DNS for your domain to point to GitHub pages
    &lt;ul&gt;
      &lt;li&gt;You will need to do this before step 10 so that GitHub can verify and find your custom domain name configured properly.&lt;/li&gt;
      &lt;li&gt;You basically need to setup A records for your domain name that point to the following IP addresses:
        &lt;ul&gt;
          &lt;li&gt;185.199.108.153&lt;/li&gt;
          &lt;li&gt;185.199.109.153&lt;/li&gt;
          &lt;li&gt;185.199.110.153&lt;/li&gt;
          &lt;li&gt;185.199.111.153&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;I use CloudFlare for my domains, so the DNS entries are configured as follows:
&lt;img src=&quot;/assets/images_out/cloudflaredns-800-a6634d8b3.jpg&quot; alt=&quot;DNS Settings for CloudFlare&quot; srcset=&quot;/assets/images_out/cloudflaredns-200-a6634d8b3.jpg 200w, /assets/images_out/cloudflaredns-400-a6634d8b3.jpg 400w, /assets/images_out/cloudflaredns-800-a6634d8b3.jpg 800w, /assets/images_out/cloudflaredns-1600-a6634d8b3.jpg 1600w, /assets/images_out/cloudflaredns-1823-a6634d8b3.jpg 1823w&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;You would replace jekyllexample.com with your domain in your DNS settings.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Configure your custom Domain Name
    &lt;ul&gt;
      &lt;li&gt;Under the GitHub Settings find the GitHub Pages section&lt;/li&gt;
      &lt;li&gt;Under Custom Domain, enter your custom domain name (ex: jekyllexample.com)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Navigate to the Actions tab in the GitHub interface
    &lt;ul&gt;
      &lt;li&gt;You should see your commit that you pushed in step 8, and you should see a workflow that is running (or has ran).&lt;/li&gt;
      &lt;li&gt;After that you should see a second action that is running (or has ran) something like “pages build and deployment”&lt;/li&gt;
      &lt;li&gt;If both of those actions have completed successfully, you should be able to navigate to your custom domain name and see your site.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Next steps! Edit the blog posts in the _posts folder, or delete them and create your own posts.
    &lt;ul&gt;
      &lt;li&gt;The easiest way to create a new post is to simply copy and paste one of the existing posts
        &lt;ul&gt;
          &lt;li&gt;Rename the file to match the date and title of your post&lt;/li&gt;
          &lt;li&gt;Edit the file to change the content/title and importantly be sure to update the published date to the dat you want the post to be.&lt;/li&gt;
          &lt;li&gt;Commit and push your changes to GitHub and you should see your new post on your site after the workflow completes.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Wed, 01 Feb 2023 10:00:15 +0000</pubDate>
        <link>https://www.jekyllexample.com/easy-installation-instructions-for-jekyll</link>
        <guid isPermaLink="true">https://www.jekyllexample.com/easy-installation-instructions-for-jekyll</guid>
        
        
        <category>Jekyll</category>
        
        <category>Tutorial</category>
        
      </item>
    
      <item>
        <title>Getting started with Jekyll</title>
        <description>&lt;p&gt;So you want to get started with Jekyll?&lt;/p&gt;

&lt;p&gt;Well, you’ve come to the right place. This post will walk you through the steps to get you going if you’re new to Jekyll and want to get it up and running with a clean instance.&lt;br /&gt;
We recommend if you’re brand new to Jekyll though you use our other instructions that utilize this site as a template for you to build your own site, complete with theme and sample content.&lt;/p&gt;

&lt;h2 id=&quot;get-started&quot;&gt;Get Started&lt;/h2&gt;

&lt;p&gt;First, you’ll need to install Jekyll. You can do this by running the following command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;gem &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;jekyll
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;create-a-new-site&quot;&gt;Create a New Site&lt;/h2&gt;

&lt;p&gt;Now that you have Jekyll installed, you can create a new site. To do this, run the following command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;jekyll new my-awesome-site
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;serve-your-site&quot;&gt;Serve Your Site&lt;/h2&gt;

&lt;p&gt;Now that you have a site, you can serve it locally. To do this, run the following command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;my-awesome-site
jekyll serve
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;make-some-changes&quot;&gt;Make Some Changes&lt;/h2&gt;

&lt;p&gt;Now that you have a site, you can make some changes. To do this, open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; file in your favorite text editor and make some changes.&lt;/p&gt;

&lt;h2 id=&quot;commit-your-changes&quot;&gt;Commit Your Changes&lt;/h2&gt;

&lt;p&gt;Now that you have made some changes, you can commit them. To do this, run the following command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Made some changes&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;push-your-changes&quot;&gt;Push Your Changes&lt;/h2&gt;

&lt;p&gt;Now that you have committed your changes, you can push them. To do this, run the following command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;git push origin master
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;And that’s it! You’ve now got a Jekyll site up and running. You can now make some changes and push them to GitHub Pages.&lt;/p&gt;
</description>
        <pubDate>Tue, 31 Jan 2023 10:00:15 +0000</pubDate>
        <link>https://www.jekyllexample.com/getting-started-with-jekyll</link>
        <guid isPermaLink="true">https://www.jekyllexample.com/getting-started-with-jekyll</guid>
        
        
        <category>Jekyll</category>
        
        <category>Tutorial</category>
        
      </item>
    
      <item>
        <title>Non-featured Blog Post</title>
        <description>&lt;p&gt;This is the second blog post, the difference is that this one is not featured.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is a quote inside that first blog post&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;This is a list item&lt;/li&gt;
  &lt;li&gt;This is a second list item&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;header-1&quot;&gt;Header 1&lt;/h1&gt;
&lt;p&gt;Some text under header 1&lt;/p&gt;

&lt;h2 id=&quot;header-2&quot;&gt;Header 2&lt;/h2&gt;
&lt;p&gt;Some text under header 2&lt;/p&gt;

&lt;h3 id=&quot;header-3&quot;&gt;Header 3&lt;/h3&gt;
&lt;p&gt;Some text under header 3&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.christoc.com&quot;&gt;This is a link&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 01 Nov 2022 01:00:15 +0000</pubDate>
        <link>https://www.jekyllexample.com/second-blog-post</link>
        <guid isPermaLink="true">https://www.jekyllexample.com/second-blog-post</guid>
        
        
        <category>Sample</category>
        
      </item>
    
      <item>
        <title>First Blog Post</title>
        <description>&lt;p&gt;This is the first blog post using JekyllExample.com.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is a quote inside that first blog post&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;This is a list item
    &lt;ul&gt;
      &lt;li&gt;This is a nested list item&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;This is a second list item
    &lt;ul&gt;
      &lt;li&gt;This is a nested list item
        &lt;ul&gt;
          &lt;li&gt;This is a nested-nested list item&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;header-1&quot;&gt;Header 1&lt;/h1&gt;
&lt;p&gt;Some text under header 1&lt;/p&gt;

&lt;h2 id=&quot;header-2&quot;&gt;Header 2&lt;/h2&gt;
&lt;p&gt;Some text under header 2&lt;/p&gt;

&lt;h3 id=&quot;header-3&quot;&gt;Header 3&lt;/h3&gt;
&lt;p&gt;Some text under header 3&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.christoc.com&quot;&gt;This is a link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This template is from &lt;a href=&quot;https://www.chrishammond.com&quot;&gt;Chris Hammond&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 10 Jul 2022 23:00:15 +0000</pubDate>
        <link>https://www.jekyllexample.com/first-blog-post</link>
        <guid isPermaLink="true">https://www.jekyllexample.com/first-blog-post</guid>
        
        
        <category>Sample</category>
        
      </item>
    
  </channel>
</rss>
